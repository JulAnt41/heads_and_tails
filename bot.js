const { Bot, InlineKeyboard } = require('grammy'); 

const bot = new Bot('7508169922:AAGm6Yyph7eAy2e0vwNRoq7Jo-dWV8tiMtE'); 

bot.command('start', (ctx) => { 
    ctx.reply('–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä–æ–≤–æ–π –±–æ—Ç! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É –Ω–∞ "–û—Ä–µ–ª" –∏–ª–∏ "–†–µ—à–∫–∞" –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ—é —É–¥–∞—á—É.\n\n' + 
        '–í–æ—Ç –∫—Ä–∞—Ç–∫–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –∏–≥—Ä—ã:\n\n1. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /play –∏–ª–∏ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.\n2. –ü–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –≤—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Ä–µ–ª" –∏–ª–∏ "–†–µ—à–∫–∞" –¥–ª—è —Å–≤–æ–µ–π —Å—Ç–∞–≤–∫–∏.\n3. –ë–æ—Ç —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç, –≤—ã–ø–∞–ª –ª–∏ "–û—Ä–µ–ª" –∏–ª–∏ "–†–µ—à–∫–∞".\n4. –ü–æ—Å–ª–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —è —Å–æ–æ–±—â—É –≤–∞–º, –≤—ã–∏–≥—Ä–∞–ª–∏ –ª–∏ –≤—ã.\n5. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–∞–≤–∏–ª–∞—Ö –∏–≥—Ä—ã –∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö.' + 
        '–ù–∞—à–∏–º–∏ /play, —á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å –∏ /help, –µ—Å–ª–∏ –∑–∞—Ö–æ–¥–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∞–≤–∏–ª–∞—Ö –∏–≥—Ä—ã –∏ –∫–æ–º–∞–Ω–¥–∞—Ö. –£–¥–∞—á–∏! üçÄ'); 
}); 

bot.command('help', (ctx) => { 
    ctx.reply('–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –∏ –∫–æ–º–∞–Ω–¥—ã\n\n–ö–æ–º–∞–Ω–¥—ã, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤ –∏–≥—Ä–µ:\n\n' + 
    '/start: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –∏–≥—Ä—ã.\n/play: –ù–∞—á–∞–ª–æ –Ω–æ–≤–æ–π –∏–≥—Ä—ã. –°–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ—é —Å—Ç–∞–≤–∫—É: "–û—Ä–µ–ª" –∏–ª–∏ "–†–µ—à–∫–∞".\n/help: –ü–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∞–≤–∏–ª–∞—Ö –∏–≥—Ä—ã –∏ –∫–æ–º–∞–Ω–¥–∞—Ö.\n\n' + 
    '–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:\n\n1. –°–¥–µ–ª–∞–π—Ç–µ —Å–≤–æ—é —Å—Ç–∞–≤–∫—É: –í—ã–±–µ—Ä–∏—Ç–µ –º–µ–∂–¥—É "–û—Ä–µ–ª" –∏ "–†–µ—à–∫–∞".\n2. –ë–æ—Ç —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –≤—ã–±–µ—Ä–µ—Ç –æ–¥–∏–Ω –∏–∑ –¥–≤—É—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.\n3. –ü–æ–ª—É—á–∏–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å, —Ö–æ—Ç–∏—Ç–µ –ª–∏ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑.\n\n' + 
    '–ù–∞–¥–µ—é—Å—å, —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –∏–≥—Ä–æ–π. –£–¥–∞—á–∏! üé≤'); 
}); 

bot.command('play', (ctx) => { 
    const keyboard = new InlineKeyboard() 
        .text('–û—Ä–µ–ª', 'head') 
        .row() 
        .text('–†–µ—à–∫–∞', 'tail'); 

    ctx.reply('–°–¥–µ–ª–∞–π—Ç–µ —Å—Ç–∞–≤–∫—É: ', { reply_markup: keyboard }); 
}); 

bot.callbackQuery('head', async (ctx) => {  
    const result = Math.random() < 0.5 ? 'heads' : 'tails';  
    const resultText = result === 'heads' ? '–û—Ä–µ–ª! –í—ã –ø–æ–±–µ–¥–∏–ª–∏!' : '–†–µ—à–∫–∞... –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.';  

    await ctx.reply(resultText);
    
    const keyboard = new InlineKeyboard()  
        .text('–î–∞', 'yes')  
        .row()  
        .text('–ù–µ—Ç', 'no');  

    await ctx.reply('–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑?', { reply_markup: keyboard });  
});  

bot.callbackQuery('tail', async (ctx) => {  
    const result = Math.random() < 0.5 ? 'heads' : 'tails';  
    const resultText = result === 'tails' ? '–†–µ—à–∫–∞! –í—ã –ø–æ–±–µ–¥–∏–ª–∏!' : '–û—Ä–µ–ª... –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏.';  

    await ctx.reply(resultText);
    
    const keyboard = new InlineKeyboard()  
        .text('–î–∞', 'yes')  
        .row()  
        .text('–ù–µ—Ç', 'no');  

    await ctx.reply('–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑?', { reply_markup: keyboard });  
}); 

bot.on('callback_query:data', (ctx => {
    const data = ctx.callbackQuery.data;

    if (data === 'yes') {
        ctx.reply('–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /play!'); 
    } else if (data === 'no') {
        ctx.reply('–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! –ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â—ë —Ä–∞–∑, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /play.'); 
    }
})); 

bot.start(); 
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.');